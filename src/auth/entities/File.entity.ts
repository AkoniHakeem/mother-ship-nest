import { FileUploadExtensions } from '../../lib/types';
import {
  Column,
  CreateDateColumn,
  DeleteDateColumn,
  Entity,
  Index,
  PrimaryGeneratedColumn,
  UpdateDateColumn,
} from 'typeorm';

@Entity()
export class File {
  @PrimaryGeneratedColumn({
    type: 'bigint',
    unsigned: true,
  })
  @Index({ unique: true })
  id: string;

  /**
   * indicates the entity data record process that necessitates the file - say: jobApplication
   */
  @Index()
  @Column({ type: 'varchar', nullable: true })
  forEntity: string | null;

  /**
   * indicates the record id specified in the forEntity field
   */
  @Index()
  @Column({ type: 'bigint', nullable: true })
  entityRecordId: string | null;

  @Index()
  @Column({ type: 'varchar', nullable: true })
  addedByEntity: string | null;

  @Index()
  @Column({ type: 'bigint', nullable: true })
  addedByEntityId: string | null;

  @Column({ type: 'varchar', nullable: false })
  fileName: string;

  @Column({ type: 'varchar', nullable: false })
  fileExtension: FileUploadExtensions;

  @Index()
  @Column({ type: 'varchar', nullable: false })
  fileUniqueKey: string;

  /* the is measured in bytes */
  @Index()
  @Column({ type: 'decimal', precision: 10, scale: 2, nullable: false })
  fileSize: string;

  /**
   * file purpose specifies the use of the file - say: cover-letter, resume, ... .
   */
  @Index()
  @Column({ type: 'varchar', nullable: true })
  filePurpose: string | null;

  @Index()
  @Column({ type: 'varchar', nullable: true })
  fileServerStatus: string | null;

  /**
   * this is an upload id generated by the remote server when a signed upload url is requested to be generated for the upload of this file. it is not used when upload is a single part.
   */
  @Index()
  @Column({ type: 'varchar', nullable: true })
  serverGeneratedFileUploadId: string | null;

  @Index()
  @Column({ type: 'bigint', nullable: true })
  ownerProfileCollectionId: string | null;

  @Column({ type: 'json', nullable: true })
  otherFileDetails: Record<string, unknown> | null;

  @Index()
  @CreateDateColumn()
  createdAt: Date;

  @Index()
  @UpdateDateColumn()
  updatedAt: Date;

  @Index()
  @DeleteDateColumn()
  deletedAt: Date;
}
